module Tests

open InterpolationUtils
open Xunit

let data = [ (7., 9.); (5., 6.); (4., 5.); (2., 3.); (1., 1.) ]

let expectedDataForLinear =
    [| (5.000000, 6.000000)
       (5.200000, 6.300000)
       (5.400000, 6.600000)
       (5.600000, 6.900000)
       (5.800000, 7.200000)
       (6.000000, 7.500000)
       (6.200000, 7.800000)
       (6.400000, 8.100000)
       (6.600000, 8.400000)
       (6.800000, 8.700000)
       (7.000000, 9.000000) |]

let expectedDataForLagrange =
    [| (2.000000, 3.00000)
       (2.200000, 3.27392)
       (2.400000, 3.51925)
       (2.600000, 3.74112)
       (2.800000, 3.94432)
       (3.000000, 4.13333)
       (3.200000, 4.31232)
       (3.400000, 4.48512)
       (3.600000, 4.65525)
       (3.800000, 4.82592)
       (4.000000, 5.00000)
       (4.200000, 5.18005)
       (4.400000, 5.36832)
       (4.600000, 5.56672)
       (4.800000, 5.77685)
       (5.000000, 6.000000)
       (5.200000, 6.23712)
       (5.400000, 6.48885)
       (5.600000, 6.75552)
       (5.800000, 7.03712)
       (6.000000, 7.33333)
       (6.200000, 7.64352)
       (6.400000, 7.96672)
       (6.600000, 8.30165)
       (6.800000, 8.64672)
       (7.000000, 9.00000) |]

[<Fact>]
let ``Linear interpolation`` () =
    expectedDataForLinear
    |> Array.iter (fun (x, y) -> Assert.Equal(y, linearRun data x |> float, 5))

[<Fact>]
let ``Lagrange interpolation`` () =
    expectedDataForLagrange
    |> Array.iter (fun (x, y) -> Assert.Equal(y, lagrangeRun data x |> float, 5))
